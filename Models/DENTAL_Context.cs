// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using System.Configuration;

namespace ADO_DENTAL_CLINIC.Models;

public partial class DENTAL_Context : DbContext
{
    public DENTAL_Context(DbContextOptions<DENTAL_Context> options)
        : base(options)
    {
    }
    public DENTAL_Context(){}

    public virtual DbSet<Category> Categories { get; set; }

    public virtual DbSet<DentalClinic> DentalClinics { get; set; }

    public virtual DbSet<Dentist> Dentists { get; set; }

    public virtual DbSet<License> Licenses { get; set; }

    public virtual DbSet<Speciality> Specialities { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Category>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Category__3213E83FED1FD9C0");

            entity.ToTable("Category");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Name)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DentalClinic>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Dental_c__3213E83F9D7ABD26");

            entity.ToTable("Dental_clinic");

            entity.HasIndex(e => e.LicenseId, "Dental_clinic_FKIndex1");

            entity.HasIndex(e => e.DentistId, "Dental_clinic_FKIndex2");

            entity.HasIndex(e => e.LicenseId, "IFK_Rel_01");

            entity.HasIndex(e => e.DentistId, "IFK_Rel_02");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.City)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Country)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DentistId).HasColumnName("DentistID");
            entity.Property(e => e.LicenseId).HasColumnName("LicenseID");

            entity.HasOne(d => d.Dentist).WithMany(p => p.DentalClinics)
                .HasForeignKey(d => d.DentistId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Dental_cl__Denti__4222D4EF");

            entity.HasOne(d => d.License).WithMany(p => p.DentalClinics)
                .HasForeignKey(d => d.LicenseId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Dental_cl__Licen__412EB0B6");
        });

        modelBuilder.Entity<Dentist>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Dentist__3213E83FC39CC90A");

            entity.ToTable("Dentist");

            entity.HasIndex(e => e.SpecialityId, "Dentist_FKIndex1");

            entity.HasIndex(e => e.CategoryId, "Dentist_FKIndex2");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CategoryId).HasColumnName("CategoryID");
            entity.Property(e => e.Name)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SpecialityId).HasColumnName("SpecialityID");
            entity.Property(e => e.Surname)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.Category).WithMany(p => p.Dentists)
                .HasForeignKey(d => d.CategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Dentist__Categor__3E52440B");

            entity.HasOne(d => d.Speciality).WithMany(p => p.Dentists)
                .HasForeignKey(d => d.SpecialityId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Dentist__Special__3D5E1FD2");
        });

        modelBuilder.Entity<License>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__License__3213E83FA70D7255");

            entity.ToTable("License");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IssuingCompany)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Issuing_company");
            entity.Property(e => e.Name)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<Speciality>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Speciali__3213E83F6813B7FC");

            entity.ToTable("Speciality");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Name)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(ConfigurationManager.ConnectionStrings["DENTAL_First"].ToString());
}